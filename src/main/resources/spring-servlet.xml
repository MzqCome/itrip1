<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--<mvc:interceptors>
        <mvc:interceptor>
            &lt;!&ndash; 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller &ndash;&gt;
            <mvc:mapping path="*" />
            <bean class="com.filter.LoginInterceptor"></bean>
        </mvc:interceptor>
        &lt;!&ndash; 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 &ndash;&gt;
    </mvc:interceptors>-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <mvc:annotation-driven>
       <!-- <mvc:message-converters>

            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>

            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>-->
    </mvc:annotation-driven>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
<!--
    &lt;!&ndash;&lt;!&ndash; 配置interceptors &ndash;&gt;
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/m/backend/**"/>
            <mvc:mapping path="/dev/flatform/**"/>
            <bean class="com.interceptor.SysInterceptor"/>
        </mvc:interceptor>
&ndash;&gt;
    </mvc:interceptors>
-->

    <!-- 配置文件上传  MultipartResolver-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="500000000"/>
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <context:component-scan base-package="com.controller"/>
    <mvc:resources mapping="/statics/**" location="/statics/"/>
</beans>